{"version":3,"sources":["pages/Login.js","components/post.js","pages/AllPosts.js","pages/SinglePost.js","pages/SinglePostUser.js","components/navbar.js","pages/NewPost.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","React","useContext","GlobalCtx","gState","setGState","url","blank","username","password","useState","form","setForm","handleChange","event","target","name","value","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","window","localStorage","setItem","token","history","push","type","onChange","Post","post","className","src","image","height","width","title","AllPosts","posts","setPosts","useEffect","map","to","id","SinglePost","setPost","match","params","description","price","contact","SinglePostUser","useHistory","formData","setFormData","getPost","ready","updatePost","a","Authorization","deletePost","placeholder","onClick","Navbar","style","textDecoration","removeItem","go","NewPost","createPost","newPost","createContext","App","parse","getItem","Provider","path","component","exact","render","rp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ada7e5d0.chunk.js","sourcesContent":["import React from \"react\";\nimport { GlobalCtx } from \"../App\";\n\nconst Login = (props) => {\n  const { gState, setGState } = React.useContext(GlobalCtx);\n  const { url } = gState;\n\n  const blank = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const [form, setForm] = React.useState(blank);\n\n  const handleChange = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { username, password } = form;\n    fetch(`${url}login`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        window.localStorage.setItem(\"token\", JSON.stringify(data));\n        setGState({ ...gState, token: data.token });\n        setForm(blank);\n        props.history.push(\"/\");\n      });\n  };\n\n  return (\n    <div>\n      <h1>Log In</h1>\n      <br />\n      <form onSubmit={handleSubmit}>\n        <h3>Username</h3>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={form.username}\n          onChange={handleChange}\n        />\n        <h3>Password</h3>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={form.password}\n          onChange={handleChange}\n        />\n        <br />\n        <br />\n        <input type=\"submit\" value=\"Log In\" />\n      </form>\n      <br />\n      {/* <Link to=\"signup\">\n        <button role=\"link\">Sign Up</button>\n      </Link> */}\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Post = ({ post }) => {\n  return (\n    <div className=\"post\">\n      <img src={post.image} height=\"100px\" width=\"auto\" />\n      <h1 className=\"post-title\"> {post.title}</h1>\n    </div>\n  );\n};\nexport default Post;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Post from \"../components/post\";\nimport { GlobalCtx } from \"../App\";\n\nconst AllPosts = () => {\n  const { gState } = React.useContext(GlobalCtx);\n\n  const [posts, setPosts] = useState([]);\n\n  const getPosts = () => {\n    // fetch makes a get request by default\n    fetch(gState.url + \"posts\")\n      .then((response) => response.json())\n      .then((data) => setPosts(data));\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  console.log(posts);\n\n  if (gState.token) {\n    return (\n      <div className=\"posts-container\">\n        {posts.map((post) => (\n          <Link\n            to={`/posts/${post.id}/edit`}\n            key={post.id}\n            className=\"post-link\"\n          >\n            <Post post={post} />\n          </Link>\n        ))}\n      </div>\n    );\n  }\n  return (\n    <div className=\"posts-container\">\n      {posts.map((post) => (\n        <Link to={`/posts/${post.id}`} key={post.id} className=\"post-link\">\n          <Post post={post} />\n        </Link>\n      ))}\n    </div>\n  );\n};\nexport default AllPosts;\n","import React, { useEffect, useState } from \"react\";\nimport { GlobalCtx } from \"../App\";\n\nconst SinglePost = (props) => {\n  const { gState } = React.useContext(GlobalCtx);\n\n  const [post, setPost] = useState(null);\n\n  const getPost = () => {\n    // fetch makes a get request by default\n    fetch(gState.url + \"posts/\" + props.match.params.id)\n      .then((response) => response.json())\n      .then((data) => setPost(data));\n  };\n\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  if (!post) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <br />\n      <img src={post.image} width=\"100px\" />\n      <br />\n      <h1>{post.title}</h1>\n      <h3>{post.description}</h3>\n      <span>${post.price}.00</span>\n      <h3>{post.contact}</h3>\n    </div>\n  );\n};\nexport default SinglePost;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { GlobalCtx } from \"../App\";\n\nconst SinglePostUser = (props) => {\n  const { gState } = React.useContext(GlobalCtx);\n  const history = useHistory();\n\n  const [formData, setFormData] = useState({\n    image: \"\",\n    title: \"\",\n    contact: \"\",\n    price: 0,\n    description: \"\",\n  });\n\n  const [post, setPost] = useState(null);\n\n  const getPost = () => {\n    // fetch makes a get request by default\n    fetch(gState.url + \"posts/\" + props.match.params.id)\n      .then((response) => response.json())\n      .then((data) => setPost(data));\n  };\n\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  // anytime post changes and it exists, when you fetch the post set the form data\n  useEffect(() => {\n    if (post) {\n      setFormData(post);\n    }\n  }, [post]);\n\n  // if the state of token changes and the token is not ready and there is no token then redirect to login\n  useEffect(() => {\n    if (gState.ready && !gState.token) {\n      history.push(\"/\");\n    }\n  }, [gState.ready, gState.token]);\n\n  console.log(gState);\n\n  if (!post) {\n    return <div>Loading...</div>;\n  }\n\n  const updatePost = async () => {\n    await fetch(gState.url + \"posts/\" + props.match.params.id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + gState.token,\n      },\n      body: JSON.stringify(formData),\n    });\n    history.push(\"/posts/\" + props.match.params.id);\n  };\n\n  const deletePost = async () => {\n    await fetch(gState.url + \"posts/\" + props.match.params.id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + gState.token,\n      },\n    });\n    // get updated post\n    getPost();\n    history.push(\"/\");\n  };\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  return (\n    <div>\n      <form>\n        <br />\n        <img src={formData.image} width=\"100px\" />\n        <h1>Image</h1>\n        <input\n          type=\"text\"\n          name=\"image\"\n          placeholder={post.image}\n          value={formData.image}\n          onChange={handleChange}\n        />\n        <h1>Title</h1>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder={post.title}\n          value={formData.title}\n          onChange={handleChange}\n        />\n        <h1>Price</h1>\n        $\n        <input\n          type=\"text\"\n          name=\"price\"\n          placeholder={post.price}\n          value={formData.price}\n          onChange={handleChange}\n        />\n        .00\n        <h1>Contact</h1>\n        <input\n          type=\"text\"\n          name=\"contact\"\n          placeholder={post.contact}\n          value={formData.contact}\n          onChange={handleChange}\n        />\n        <h1>Description</h1>\n        <input\n          type=\"text\"\n          name=\"description\"\n          placeholder={post.description}\n          value={formData.description}\n          onChange={handleChange}\n        />\n        <br />\n        <br />\n        <button type=\"button\" onClick={updatePost}>\n          Update\n        </button>\n        <br />\n        <br />\n        <button type=\"button\" onClick={deletePost}>\n          Delete\n        </button>\n        <br />\n        <br />\n        <Link to=\"/\">\n          <button>Go Back</button>\n        </Link>\n      </form>\n    </div>\n  );\n};\nexport default SinglePostUser;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { GlobalCtx } from \"../App\";\n\nconst Navbar = () => {\n  const { gState } = React.useContext(GlobalCtx);\n\n  const history = useHistory();\n  console.log(gState);\n  const logout = () => {\n    window.localStorage.removeItem(\"token\");\n    history.push(\"/\");\n    history.go(0);\n  };\n\n  if (gState.token) {\n    return (\n      <div className=\"navbar\">\n        <h1>Batman Collector's Marketplace</h1>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <h2 className=\"nav-link\">Home</h2>\n        </Link>\n        <Link to=\"/posts/new\" style={{ textDecoration: \"none\" }}>\n          <h2 className=\"nav-link\">Create Post </h2>\n        </Link>\n        <Link to=\"/\" onClick={logout} style={{ textDecoration: \"none\" }}>\n          <h2 className=\"nav-link\">Logout</h2>\n        </Link>\n      </div>\n    );\n  }\n  return (\n    <div className=\"navbar\">\n      <h1>Batman Collector's Marketplace</h1>\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n        <h2 className=\"nav-link\">Home</h2>\n      </Link>\n      <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n        <h2 className=\"nav-link\">Login</h2>\n      </Link>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from \"react\";\nimport { GlobalCtx } from \"../App\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NewPost = () => {\n  const { gState } = React.useContext(GlobalCtx);\n  const history = useHistory();\n\n  const [post] = useState(null);\n  const [setPosts] = useState([]);\n\n  const [formData, setFormData] = useState({\n    image: \"\",\n    title: \"\",\n    contact: \"\",\n    price: 0,\n    description: \"\",\n  });\n\n  const getPosts = () => {\n    // fetch makes a get request by default\n    fetch(gState.url + \"posts\")\n      .then((response) => response.json())\n      .then((data) => setPosts(data));\n  };\n\n  // anytime post changes and it exists, when you fetch the post set the form data\n  useEffect(() => {\n    if (post) {\n      setFormData(post);\n    }\n  }, [post]);\n\n  const createPost = async (newPost) => {\n    await fetch(gState.url + \"posts\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + gState.token,\n      },\n      body: JSON.stringify(formData),\n    });\n    getPosts();\n  };\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createPost(formData);\n    history.push(\"/\");\n    history.go(0);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Title</h1>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={formData.title}\n          onChange={handleChange}\n        />\n        <h1>Image</h1>\n        <input\n          type=\"text\"\n          name=\"image\"\n          value={formData.image}\n          onChange={handleChange}\n        />\n        <h1>Price</h1>\n        $\n        <input\n          type=\"text\"\n          name=\"price\"\n          value={formData.price}\n          onChange={handleChange}\n        />\n        .00\n        <h1>Contact</h1>\n        <input\n          type=\"text\"\n          name=\"contact\"\n          value={formData.contact}\n          onChange={handleChange}\n        />\n        <h1>Description</h1>\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n        />\n        <br />\n        <br />\n        <input type=\"submit\" value=\"Create\" />\n      </form>\n    </div>\n  );\n};\nexport default NewPost;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\n// import Signup from \"./pages/Signup\";\nimport AllPosts from \"./pages/AllPosts\";\nimport SinglePost from \"./pages/SinglePost\";\nimport SinglePostUser from \"./pages/SinglePostUser\";\nimport Navbar from \"./components/navbar\";\n\nimport NewPost from \"./pages/NewPost\";\n\nimport \"./App.css\";\n\nexport const GlobalCtx = React.createContext(null);\n\nfunction App() {\n  const [gState, setGState] = React.useState({\n    url: \"https://project4-classifiedads-backend.herokuapp.com/\",\n    // url: \"http://localhost:3000/\",\n    token: null,\n    ready: false,\n  });\n\n  //Check if user is logged in\n  React.useEffect(() => {\n    const token = JSON.parse(window.localStorage.getItem(\"token\"));\n    if (token) {\n      setGState({ ...gState, token: token.token, ready: true });\n    } else {\n      setGState({ ...gState, token: null, ready: true });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <GlobalCtx.Provider value={{ gState, setGState }}>\n        <Route path=\"/\" component={Navbar} />\n\n        <Switch>\n          <Route exact path=\"/\" render={(rp) => <AllPosts {...rp} />} />\n          <Route exact path=\"/login\" render={(rp) => <Login {...rp} />} />\n          <Route exact path=\"/posts/new\" render={(rp) => <NewPost {...rp} />} />\n          <Route\n            exact\n            path=\"/posts/:id\"\n            render={(rp) => <SinglePost {...rp} />}\n          />\n          <Route\n            exact\n            path=\"/posts/:id/edit\"\n            render={(rp) => <SinglePostUser {...rp} />}\n          />\n\n          {/* <Route path=\"/signup\" render={(rp) => <Signup {...rp} />} /> */}\n        </Switch>\n      </GlobalCtx.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}